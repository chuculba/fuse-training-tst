<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	
	xmlns:wsa="http://cxf.apache.org/ws/addressing"
	xmlns:wsrm-policy="http://schemas.xmlsoap.org/ws/2005/02/rm/policy"
	xmlns:wsrm-mgr="http://cxf.apache.org/ws/rm/manager" 
	xmlns:cxf="http://camel.apache.org/schema/cxf"
	xmlns:cxfcore="http://cxf.apache.org/core"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
  		http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
  		http://www.springframework.org/schema/context/spring-context.xsd
  		http://camel.apache.org/schema/spring
		http://camel.apache.org/schema/spring/camel-spring.xsd
		http://camel.apache.org/schema/cxf
		http://camel.apache.org/schema/cxf/camel-cxf.xsd
	    http://cxf.apache.org/transports/http/configuration 
        http://cxf.apache.org/schemas/configuration/http-conf.xsd
        http://schemas.xmlsoap.org/ws/2005/02/rm/policy 
        http://schemas.xmlsoap.org/ws/2005/02/rm/wsrm-policy.xsd
        http://cxf.apache.org/ws/rm/manager 
        http://cxf.apache.org/schemas/configuration/wsrm-manager.xsd">

	<cxf:cxfEndpoint id="WS" 
		address="http://localhost:8182/training/WebService" serviceClass="org.jboss.training.CustomerService">

		<cxf:properties>
			<entry key="schema-validation-enabled" value="true" />
		</cxf:properties>
		<cxf:outInterceptors>
			<ref bean="loggingOutInterceptor" />
		</cxf:outInterceptors>
		<cxf:inInterceptors>
			<ref bean="loggingInInterceptor" />
		</cxf:inInterceptors>
	</cxf:cxfEndpoint>


 	
	<cxf:bus>
		<cxf:features>
			<cxf:logging />
			<wsa:addressing />
			<wsrm-mgr:reliableMessaging>
				<wsrm-policy:RMAssertion>
					<wsrm-policy:BaseRetransmissionInterval
						Milliseconds="4000" />
					<wsrm-policy:AcknowledgementInterval
						Milliseconds="2000" />
				</wsrm-policy:RMAssertion>
				<wsrm-mgr:destinationPolicy>
					<wsrm-mgr:acksPolicy intraMessageThreshold="0" />
				</wsrm-mgr:destinationPolicy>
			</wsrm-mgr:reliableMessaging>
		</cxf:features>
	</cxf:bus>



	<bean id="loggingOutInterceptor" class="org.apache.cxf.interceptor.LoggingOutInterceptor" />
	<bean id="loggingInInterceptor" class="org.apache.cxf.interceptor.LoggingInInterceptor" />
	<bean id="enrich" class="org.jboss.fuse.training.camel.Enrich"
		init-method="generateCustomer" />

	<camelContext trace="false"
		xmlns="http://camel.apache.org/schema/spring">
		<dataFormats>
			<soapjaxb contextPath="org.jboss.training" id="soapFormat" />
		</dataFormats>
		<route>
			<from uri="file:/data/camel-exercise/webservices?noop=true" />
			<convertBodyTo type="String" />
			<log message="Name of the client to be created received : ${body}" />
			<bean method="createCustomer" ref="enrich" />
			<marshal ref="soapFormat" />
			<setHeader headerName="SOAPAction">
				<constant>http://training.jboss.org/saveCustomer</constant>
			</setHeader>
			<to uri="http://0.0.0.0:9090/training/WebService" />
			<log message="--- SOAP Response received : ${body} ---">
				<description>Call Web Service to save the client</description>
			</log>
		</route>

		<route id="cxf-to-queue">
			<from uri="cxf:bean:WS?dataFormat=MESSAGE" />
			<convertBodyTo type="String" />
			<log
				message="SOAP message received : ${body} and operation type : ${in.header.SOAPAction}" />
			<unmarshal ref="soapFormat" />
			<choice>
				<when>
					<simple>${in.header.SOAPAction} contains 'saveCustomer'</simple>
					<bean method="saveCustomer" ref="enrich" />
					<marshal ref="soapFormat" />
				</when>
				<when>
					<simple>${in.header.SOAPAction} contains 'getCustomerByName'</simple>
					<bean method="getCustomerByName" ref="enrich" />
					<marshal ref="soapFormat" />
				</when>
				<when>
					<simple>${in.header.SOAPAction} contains 'getAllCustomers'</simple>
					<bean method="getCustomers" ref="enrich" />
					<marshal ref="soapFormat" />
				</when>
			</choice>
			<log message="SOAP message returned : ${body}" />
		</route>
	</camelContext>


</beans>